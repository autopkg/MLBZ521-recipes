Description: |
  Downloads and packages the latest version of Matlab from a local file share.

  This recipe version uses the offline media created with the "MathWorks Installer" described in the guide here:  https://www.mathworks.com/matlabcentral/answers/259632-how-can-i-get-matlab-installation-files-for-use-on-an-offline-machine

  For information on how this recipe works, please see the README in my repo (https://github.com/autopkg/MLBZ521-recipes/blob/master/ReadMe.md).

  I license most software separately in my environment and do not use the installer.input's `licensePath` key.  If you want to use this key, you'll need to fork this recipe and adjust the postinstall script.

  The following override variables are available to support the installation of Matlab:
    * INSTALLER_INPUT
      * As the name suggests, this is the "installer.input" that allows you to customize the install
        of Matlab.  The available parameters are included; customize for your environment.

  If you want to customize the products that are installed, a copy of an original, albeit old, installer_input.txt is available in the recipe directory.  I've seen people are unable to locate it as it's not included in newer ISO downloads even though the documentation points to it.
Identifier: com.github.mlbz521.pkg.Matlab
Input:
  INSTALLER_INPUT: |
    destinationFolder=/Applications
    fileInstallationKey=
    agreeToLicense=yes
    outputFile=/var/log/matlab_installation.log
    mode=silent
    # automatedModeTimeout=
    # activationPropertiesFile=
    # The "licensePath" is handled in another step in my environment
    # licensePath=
    # lmgrFiles=
  NAME: Matlab
ParentRecipe: com.github.mlbz521.download.Matlab
Process:
- Arguments:
    pkgdirs: {}
    pkgroot: "%RECIPE_CACHE_DIR%/pkgroot"
  Processor: PkgRootCreator
- Arguments:
    pkgdirs: {}
    pkgroot: "%RECIPE_CACHE_DIR%/scripts"
  Processor: PkgRootCreator
- Arguments:
    overwrite: true
    source: "%RECIPE_CACHE_DIR%/unpack"
    target: "%RECIPE_CACHE_DIR%/scripts/install"
  Processor: FileMover
- Arguments:
    file_content: "%INSTALLER_INPUT%"
    file_mode: "0755"
    file_path: "%RECIPE_CACHE_DIR%/scripts/installer_input.txt"
  Processor: FileCreator
- Arguments:
    file_content: |
      #!/bin/bash

      ###################################################################################################
      # Script Name:  install_MatLab.sh
      # By:  Zack Thompson / Created:  3/6/2017
      # Version:  1.8.0 / Updated:  12/8/2022 / By:  ZT
      #
      # Description:  This script installs MatLab.
      #
      ###################################################################################################

      echo "*****  Install Matlab process:  START  *****"

      ##################################################
      # Define Variables

      # Set working directory
      pkgDir=$( /usr/bin/dirname "${0}" )
      # Version that's being updated (this will be set by the autopkg process)
      version="%version%"

      ##################################################
      # Bits staged...

      # Install MatLab with option file.
      echo "Installing Matlab..."

      if [[ $version == "2017a" ]]; then
        # Inject dummy location to the installer.input file -- hacky, but works
        LANG=C /usr/bin/sed -Ei '' 's,(#)? ?licensePath=.*,'"licensePath=${pkgDir}/installer_input.txt"',' "${pkgDir}/installer_input.txt"
        # -mode silent did not work in the option file for me.
        exitStatus=$("${pkgDir}/install" -mode silent -inputFile "${pkgDir}/installer_input.txt")
      elif [[ $version == "2017b" ]]; then
        # I'm assuming all future version will be packaged in this manner...(/hoping)..?
        exitStatus=$("${pkgDir}/InstallForMacOSX.app/Contents/MacOS/InstallForMacOSX" -inputFile "${pkgDir}/installer_input.txt")
      else
        # 2018a did not work like 2017b unfortunately, where I didn't have to specify the licensePath...
        # Inject dummy location to the installer.input file -- hacky, but works
        LANG=C /usr/bin/sed -Ei '' 's,(#)? ?licensePath=.*,'"licensePath=${pkgDir}/installer_input.txt"',' "${pkgDir}/installer_input.txt"

        # Locate the installer app and install it
        app_installer=$(/usr/bin/find -E "${pkgDir}" -iregex ".*[/]InstallForMacOS[X]{0,1}.*[.]app" -type d -prune)
        app_executable=`defaults read "${app_installer}/Contents/Info.plist" CFBundleExecutable`
        exitStatus=$("${app_installer}/Contents/MacOS/${app_executable}" -inputFile "${pkgDir}/installer_input.txt")
      fi
      exitCode=$?

      if [[ $exitCode != 0 ]]; then
        echo "Exit Code:  ${exitCode}"
      fi

      if [[ $exitStatus == *"End - Unsuccessful"* ]]; then
        echo "ERROR:  Install failed!"
        echo "ERROR Content:  ${exitStatus}"
        echo "*****  Install Matlab process:  FAILED  *****"
        exit 1
      fi

      echo "Install complete!"
      echo "*****  Install Matlab process:  COMPLETE  *****"

      exit 0
    file_mode: "0755"
    file_path: "%RECIPE_CACHE_DIR%/scripts/postinstall"
  Processor: FileCreator
- Arguments:
    pkg_request:
      id: com.mathworks.installer
      options: purge_ds_store
      pkgname: "%NAME%-%version%"
      pkgroot: "%RECIPE_CACHE_DIR%/pkgroot"
      scripts: Scripts
      version: "%version%"
  Processor: PkgCreator
- Arguments:
    path_list:
    - "%RECIPE_CACHE_DIR%/pkgroot"
    - "%RECIPE_CACHE_DIR%/scripts"
  Processor: PathDeleter
